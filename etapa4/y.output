Terminals unused in grammar

    KW_THEN
    TOKEN_ERROR


State 67 conflicts: 1 shift/reduce


Grammar

    0 $accept: programm $end

    1 programm: decl

    2 decl: dec decl
    3     | ε

    4 literal: LIT_CHAR
    5        | LIT_INT
    6        | LIT_REAL
    7        | LIT_STRING

    8 type: KW_INT
    9     | KW_CHAR
   10     | KW_BOOL
   11     | KW_REAL

   12 dec: type TK_IDENTIFIER '=' literal ';'
   13    | type TK_IDENTIFIER '(' func_param_list ')' block
   14    | type TK_IDENTIFIER '[' LIT_INT ']' vector_ini ';'

   15 func_param_list: type TK_IDENTIFIER func_param_tail
   16                | ε

   17 func_param_tail: ',' type TK_IDENTIFIER func_param_tail
   18                | ε

   19 vector_ini: literal vector_ini
   20           | ε

   21 block: '{' lcmd '}'

   22 lcmd: cmd lcmd
   23     | ε

   24 cmd: TK_IDENTIFIER '=' expr ';'
   25    | TK_IDENTIFIER '[' expr ']' '=' expr ';'
   26    | KW_OUTPUT output_arguments_list ';'
   27    | KW_RETURN expr ';'
   28    | block
   29    | control_flow
   30    | ';'

   31 output_arguments_list: output_arg output_tail
   32                      | ε

   33 output_arg: LIT_STRING
   34           | expr

   35 output_tail: ',' output_arg output_tail
   36            | ε

   37 func_args_list: expr func_args_tail
   38               | ε

   39 func_args_tail: ',' expr func_args_tail
   40               | ε

   41 expr: LIT_INT
   42     | LIT_CHAR
   43     | LIT_REAL
   44     | TK_IDENTIFIER
   45     | TK_IDENTIFIER '[' expr ']'
   46     | expr '+' expr
   47     | expr '-' expr
   48     | expr '*' expr
   49     | expr '/' expr
   50     | expr '&' expr
   51     | expr '|' expr
   52     | '~' expr
   53     | expr OPERATOR_DIF expr
   54     | expr OPERATOR_EQ expr
   55     | expr OPERATOR_GE expr
   56     | expr OPERATOR_LE expr
   57     | expr '<' expr
   58     | expr '>' expr
   59     | KW_INPUT '(' type ')'
   60     | parenthesis_expr
   61     | TK_IDENTIFIER '(' func_args_list ')'

   62 parenthesis_expr: '(' expr ')'

   63 control_flow: KW_IF parenthesis_expr cmd
   64             | KW_IF parenthesis_expr cmd KW_ELSE cmd
   65             | KW_IF parenthesis_expr KW_LOOP cmd


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 50
    '(' (40) 13 59 61 62
    ')' (41) 13 59 61 62
    '*' (42) 48
    '+' (43) 46
    ',' (44) 17 35 39
    '-' (45) 47
    '/' (47) 49
    ';' (59) 12 14 24 25 26 27 30
    '<' (60) 57
    '=' (61) 12 24 25
    '>' (62) 58
    '[' (91) 14 25 45
    ']' (93) 14 25 45
    '{' (123) 21
    '|' (124) 51
    '}' (125) 21
    '~' (126) 52
    error (256)
    KW_CHAR (258) 9
    KW_INT (259) 8
    KW_REAL (260) 11
    KW_BOOL (261) 10
    KW_IF (262) 63 64 65
    KW_THEN (263)
    KW_ELSE (264) 64
    KW_LOOP (265) 65
    KW_INPUT (266) 59
    KW_OUTPUT (267) 26
    KW_RETURN (268) 27
    OPERATOR_LE (269) 56
    OPERATOR_GE (270) 55
    OPERATOR_EQ (271) 54
    OPERATOR_DIF (272) 53
    TK_IDENTIFIER <symbol> (273) 12 13 14 15 17 24 25 44 45 61
    LIT_INT <symbol> (274) 5 14 41
    LIT_REAL <symbol> (275) 6 43
    LIT_CHAR <symbol> (276) 4 42
    LIT_STRING <symbol> (277) 7 33
    TOKEN_ERROR (278)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    programm (43)
        on left: 1
        on right: 0
    decl <ast> (44)
        on left: 2 3
        on right: 1 2
    literal <ast> (45)
        on left: 4 5 6 7
        on right: 12 19
    type <ast> (46)
        on left: 8 9 10 11
        on right: 12 13 14 15 17 59
    dec <ast> (47)
        on left: 12 13 14
        on right: 2
    func_param_list <ast> (48)
        on left: 15 16
        on right: 13
    func_param_tail <ast> (49)
        on left: 17 18
        on right: 15 17
    vector_ini <ast> (50)
        on left: 19 20
        on right: 14 19
    block <ast> (51)
        on left: 21
        on right: 13 28
    lcmd <ast> (52)
        on left: 22 23
        on right: 21 22
    cmd <ast> (53)
        on left: 24 25 26 27 28 29 30
        on right: 22 63 64 65
    output_arguments_list <ast> (54)
        on left: 31 32
        on right: 26
    output_arg <ast> (55)
        on left: 33 34
        on right: 31 35
    output_tail <ast> (56)
        on left: 35 36
        on right: 31 35
    func_args_list <ast> (57)
        on left: 37 38
        on right: 61
    func_args_tail <ast> (58)
        on left: 39 40
        on right: 37 39
    expr <ast> (59)
        on left: 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
        on right: 24 25 27 34 37 39 45 46 47 48 49 50 51 52 53 54 55 56 57 58 62
    parenthesis_expr <ast> (60)
        on left: 62
        on right: 60 63 64 65
    control_flow <ast> (61)
        on left: 63 64 65
        on right: 29


State 0

    0 $accept: • programm $end

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (decl)

    programm  go to state 5
    decl      go to state 6
    type      go to state 7
    dec       go to state 8


State 1

    9 type: KW_CHAR •

    $default  reduce using rule 9 (type)


State 2

    8 type: KW_INT •

    $default  reduce using rule 8 (type)


State 3

   11 type: KW_REAL •

    $default  reduce using rule 11 (type)


State 4

   10 type: KW_BOOL •

    $default  reduce using rule 10 (type)


State 5

    0 $accept: programm • $end

    $end  shift, and go to state 9


State 6

    1 programm: decl •

    $default  reduce using rule 1 (programm)


State 7

   12 dec: type • TK_IDENTIFIER '=' literal ';'
   13    | type • TK_IDENTIFIER '(' func_param_list ')' block
   14    | type • TK_IDENTIFIER '[' LIT_INT ']' vector_ini ';'

    TK_IDENTIFIER  shift, and go to state 10


State 8

    2 decl: dec • decl

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 3 (decl)

    decl  go to state 11
    type  go to state 7
    dec   go to state 8


State 9

    0 $accept: programm $end •

    $default  accept


State 10

   12 dec: type TK_IDENTIFIER • '=' literal ';'
   13    | type TK_IDENTIFIER • '(' func_param_list ')' block
   14    | type TK_IDENTIFIER • '[' LIT_INT ']' vector_ini ';'

    '='  shift, and go to state 12
    '('  shift, and go to state 13
    '['  shift, and go to state 14


State 11

    2 decl: dec decl •

    $default  reduce using rule 2 (decl)


State 12

   12 dec: type TK_IDENTIFIER '=' • literal ';'

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    literal  go to state 19


State 13

   13 dec: type TK_IDENTIFIER '(' • func_param_list ')' block

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    $default  reduce using rule 16 (func_param_list)

    type             go to state 20
    func_param_list  go to state 21


State 14

   14 dec: type TK_IDENTIFIER '[' • LIT_INT ']' vector_ini ';'

    LIT_INT  shift, and go to state 22


State 15

    5 literal: LIT_INT •

    $default  reduce using rule 5 (literal)


State 16

    6 literal: LIT_REAL •

    $default  reduce using rule 6 (literal)


State 17

    4 literal: LIT_CHAR •

    $default  reduce using rule 4 (literal)


State 18

    7 literal: LIT_STRING •

    $default  reduce using rule 7 (literal)


State 19

   12 dec: type TK_IDENTIFIER '=' literal • ';'

    ';'  shift, and go to state 23


State 20

   15 func_param_list: type • TK_IDENTIFIER func_param_tail

    TK_IDENTIFIER  shift, and go to state 24


State 21

   13 dec: type TK_IDENTIFIER '(' func_param_list • ')' block

    ')'  shift, and go to state 25


State 22

   14 dec: type TK_IDENTIFIER '[' LIT_INT • ']' vector_ini ';'

    ']'  shift, and go to state 26


State 23

   12 dec: type TK_IDENTIFIER '=' literal ';' •

    $default  reduce using rule 12 (dec)


State 24

   15 func_param_list: type TK_IDENTIFIER • func_param_tail

    ','  shift, and go to state 27

    $default  reduce using rule 18 (func_param_tail)

    func_param_tail  go to state 28


State 25

   13 dec: type TK_IDENTIFIER '(' func_param_list ')' • block

    '{'  shift, and go to state 29

    block  go to state 30


State 26

   14 dec: type TK_IDENTIFIER '[' LIT_INT ']' • vector_ini ';'

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    $default  reduce using rule 20 (vector_ini)

    literal     go to state 31
    vector_ini  go to state 32


State 27

   17 func_param_tail: ',' • type TK_IDENTIFIER func_param_tail

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    type  go to state 33


State 28

   15 func_param_list: type TK_IDENTIFIER func_param_tail •

    $default  reduce using rule 15 (func_param_list)


State 29

   21 block: '{' • lcmd '}'

    KW_IF          shift, and go to state 34
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 29

    $default  reduce using rule 23 (lcmd)

    block         go to state 39
    lcmd          go to state 40
    cmd           go to state 41
    control_flow  go to state 42


State 30

   13 dec: type TK_IDENTIFIER '(' func_param_list ')' block •

    $default  reduce using rule 13 (dec)


State 31

   19 vector_ini: literal • vector_ini

    LIT_INT     shift, and go to state 15
    LIT_REAL    shift, and go to state 16
    LIT_CHAR    shift, and go to state 17
    LIT_STRING  shift, and go to state 18

    $default  reduce using rule 20 (vector_ini)

    literal     go to state 31
    vector_ini  go to state 43


State 32

   14 dec: type TK_IDENTIFIER '[' LIT_INT ']' vector_ini • ';'

    ';'  shift, and go to state 44


State 33

   17 func_param_tail: ',' type • TK_IDENTIFIER func_param_tail

    TK_IDENTIFIER  shift, and go to state 45


State 34

   63 control_flow: KW_IF • parenthesis_expr cmd
   64             | KW_IF • parenthesis_expr cmd KW_ELSE cmd
   65             | KW_IF • parenthesis_expr KW_LOOP cmd

    '('  shift, and go to state 46

    parenthesis_expr  go to state 47


State 35

   26 cmd: KW_OUTPUT • output_arguments_list ';'

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    LIT_STRING     shift, and go to state 53
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    $default  reduce using rule 32 (output_arguments_list)

    output_arguments_list  go to state 55
    output_arg             go to state 56
    expr                   go to state 57
    parenthesis_expr       go to state 58


State 36

   27 cmd: KW_RETURN • expr ';'

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 59
    parenthesis_expr  go to state 58


State 37

   24 cmd: TK_IDENTIFIER • '=' expr ';'
   25    | TK_IDENTIFIER • '[' expr ']' '=' expr ';'

    '='  shift, and go to state 60
    '['  shift, and go to state 61


State 38

   30 cmd: ';' •

    $default  reduce using rule 30 (cmd)


State 39

   28 cmd: block •

    $default  reduce using rule 28 (cmd)


State 40

   21 block: '{' lcmd • '}'

    '}'  shift, and go to state 62


State 41

   22 lcmd: cmd • lcmd

    KW_IF          shift, and go to state 34
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 29

    $default  reduce using rule 23 (lcmd)

    block         go to state 39
    lcmd          go to state 63
    cmd           go to state 41
    control_flow  go to state 42


State 42

   29 cmd: control_flow •

    $default  reduce using rule 29 (cmd)


State 43

   19 vector_ini: literal vector_ini •

    $default  reduce using rule 19 (vector_ini)


State 44

   14 dec: type TK_IDENTIFIER '[' LIT_INT ']' vector_ini ';' •

    $default  reduce using rule 14 (dec)


State 45

   17 func_param_tail: ',' type TK_IDENTIFIER • func_param_tail

    ','  shift, and go to state 27

    $default  reduce using rule 18 (func_param_tail)

    func_param_tail  go to state 64


State 46

   62 parenthesis_expr: '(' • expr ')'

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 65
    parenthesis_expr  go to state 58


State 47

   63 control_flow: KW_IF parenthesis_expr • cmd
   64             | KW_IF parenthesis_expr • cmd KW_ELSE cmd
   65             | KW_IF parenthesis_expr • KW_LOOP cmd

    KW_IF          shift, and go to state 34
    KW_LOOP        shift, and go to state 66
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 29

    block         go to state 39
    cmd           go to state 67
    control_flow  go to state 42


State 48

   59 expr: KW_INPUT • '(' type ')'

    '('  shift, and go to state 68


State 49

   44 expr: TK_IDENTIFIER •
   45     | TK_IDENTIFIER • '[' expr ']'
   61     | TK_IDENTIFIER • '(' func_args_list ')'

    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 44 (expr)


State 50

   41 expr: LIT_INT •

    $default  reduce using rule 41 (expr)


State 51

   43 expr: LIT_REAL •

    $default  reduce using rule 43 (expr)


State 52

   42 expr: LIT_CHAR •

    $default  reduce using rule 42 (expr)


State 53

   33 output_arg: LIT_STRING •

    $default  reduce using rule 33 (output_arg)


State 54

   52 expr: '~' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 71
    parenthesis_expr  go to state 58


State 55

   26 cmd: KW_OUTPUT output_arguments_list • ';'

    ';'  shift, and go to state 72


State 56

   31 output_arguments_list: output_arg • output_tail

    ','  shift, and go to state 73

    $default  reduce using rule 36 (output_tail)

    output_tail  go to state 74


State 57

   34 output_arg: expr •
   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86

    $default  reduce using rule 34 (output_arg)


State 58

   60 expr: parenthesis_expr •

    $default  reduce using rule 60 (expr)


State 59

   27 cmd: KW_RETURN expr • ';'
   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    ';'           shift, and go to state 87


State 60

   24 cmd: TK_IDENTIFIER '=' • expr ';'

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 88
    parenthesis_expr  go to state 58


State 61

   25 cmd: TK_IDENTIFIER '[' • expr ']' '=' expr ';'

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 89
    parenthesis_expr  go to state 58


State 62

   21 block: '{' lcmd '}' •

    $default  reduce using rule 21 (block)


State 63

   22 lcmd: cmd lcmd •

    $default  reduce using rule 22 (lcmd)


State 64

   17 func_param_tail: ',' type TK_IDENTIFIER func_param_tail •

    $default  reduce using rule 17 (func_param_tail)


State 65

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr
   62 parenthesis_expr: '(' expr • ')'

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    ')'           shift, and go to state 90


State 66

   65 control_flow: KW_IF parenthesis_expr KW_LOOP • cmd

    KW_IF          shift, and go to state 34
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 29

    block         go to state 39
    cmd           go to state 91
    control_flow  go to state 42


State 67

   63 control_flow: KW_IF parenthesis_expr cmd •
   64             | KW_IF parenthesis_expr cmd • KW_ELSE cmd

    KW_ELSE  shift, and go to state 92

    KW_ELSE   [reduce using rule 63 (control_flow)]
    $default  reduce using rule 63 (control_flow)


State 68

   59 expr: KW_INPUT '(' • type ')'

    KW_CHAR  shift, and go to state 1
    KW_INT   shift, and go to state 2
    KW_REAL  shift, and go to state 3
    KW_BOOL  shift, and go to state 4

    type  go to state 93


State 69

   61 expr: TK_IDENTIFIER '(' • func_args_list ')'

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    $default  reduce using rule 38 (func_args_list)

    func_args_list    go to state 94
    expr              go to state 95
    parenthesis_expr  go to state 58


State 70

   45 expr: TK_IDENTIFIER '[' • expr ']'

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 96
    parenthesis_expr  go to state 58


State 71

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   52     | '~' expr •
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    $default  reduce using rule 52 (expr)


State 72

   26 cmd: KW_OUTPUT output_arguments_list ';' •

    $default  reduce using rule 26 (cmd)


State 73

   35 output_tail: ',' • output_arg output_tail

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    LIT_STRING     shift, and go to state 53
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    output_arg        go to state 97
    expr              go to state 57
    parenthesis_expr  go to state 58


State 74

   31 output_arguments_list: output_arg output_tail •

    $default  reduce using rule 31 (output_arguments_list)


State 75

   56 expr: expr OPERATOR_LE • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 98
    parenthesis_expr  go to state 58


State 76

   55 expr: expr OPERATOR_GE • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 99
    parenthesis_expr  go to state 58


State 77

   54 expr: expr OPERATOR_EQ • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 100
    parenthesis_expr  go to state 58


State 78

   53 expr: expr OPERATOR_DIF • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 101
    parenthesis_expr  go to state 58


State 79

   50 expr: expr '&' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 102
    parenthesis_expr  go to state 58


State 80

   51 expr: expr '|' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 103
    parenthesis_expr  go to state 58


State 81

   58 expr: expr '>' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 104
    parenthesis_expr  go to state 58


State 82

   57 expr: expr '<' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 105
    parenthesis_expr  go to state 58


State 83

   46 expr: expr '+' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 106
    parenthesis_expr  go to state 58


State 84

   47 expr: expr '-' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 107
    parenthesis_expr  go to state 58


State 85

   48 expr: expr '*' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 108
    parenthesis_expr  go to state 58


State 86

   49 expr: expr '/' • expr

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 109
    parenthesis_expr  go to state 58


State 87

   27 cmd: KW_RETURN expr ';' •

    $default  reduce using rule 27 (cmd)


State 88

   24 cmd: TK_IDENTIFIER '=' expr • ';'
   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    ';'           shift, and go to state 110


State 89

   25 cmd: TK_IDENTIFIER '[' expr • ']' '=' expr ';'
   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    ']'           shift, and go to state 111


State 90

   62 parenthesis_expr: '(' expr ')' •

    $default  reduce using rule 62 (parenthesis_expr)


State 91

   65 control_flow: KW_IF parenthesis_expr KW_LOOP cmd •

    $default  reduce using rule 65 (control_flow)


State 92

   64 control_flow: KW_IF parenthesis_expr cmd KW_ELSE • cmd

    KW_IF          shift, and go to state 34
    KW_OUTPUT      shift, and go to state 35
    KW_RETURN      shift, and go to state 36
    TK_IDENTIFIER  shift, and go to state 37
    ';'            shift, and go to state 38
    '{'            shift, and go to state 29

    block         go to state 39
    cmd           go to state 112
    control_flow  go to state 42


State 93

   59 expr: KW_INPUT '(' type • ')'

    ')'  shift, and go to state 113


State 94

   61 expr: TK_IDENTIFIER '(' func_args_list • ')'

    ')'  shift, and go to state 114


State 95

   37 func_args_list: expr • func_args_tail
   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    ','           shift, and go to state 115

    $default  reduce using rule 40 (func_args_tail)

    func_args_tail  go to state 116


State 96

   45 expr: TK_IDENTIFIER '[' expr • ']'
   46     | expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    ']'           shift, and go to state 117


State 97

   35 output_tail: ',' output_arg • output_tail

    ','  shift, and go to state 73

    $default  reduce using rule 36 (output_tail)

    output_tail  go to state 118


State 98

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   56     | expr OPERATOR_LE expr •
   57     | expr • '<' expr
   58     | expr • '>' expr

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 56 (expr)


State 99

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   55     | expr OPERATOR_GE expr •
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 55 (expr)


State 100

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   54     | expr OPERATOR_EQ expr •
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 54 (expr)


State 101

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   53     | expr OPERATOR_DIF expr •
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 53 (expr)


State 102

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   50     | expr '&' expr •
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86

    $default  reduce using rule 50 (expr)


State 103

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   51     | expr '|' expr •
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86

    $default  reduce using rule 51 (expr)


State 104

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr
   58     | expr '>' expr •

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 58 (expr)


State 105

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   57     | expr '<' expr •
   58     | expr • '>' expr

    '+'  shift, and go to state 83
    '-'  shift, and go to state 84
    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 57 (expr)


State 106

   46 expr: expr • '+' expr
   46     | expr '+' expr •
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 46 (expr)


State 107

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   47     | expr '-' expr •
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    '*'  shift, and go to state 85
    '/'  shift, and go to state 86

    $default  reduce using rule 47 (expr)


State 108

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   48     | expr '*' expr •
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    $default  reduce using rule 48 (expr)


State 109

   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   49     | expr '/' expr •
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    $default  reduce using rule 49 (expr)


State 110

   24 cmd: TK_IDENTIFIER '=' expr ';' •

    $default  reduce using rule 24 (cmd)


State 111

   25 cmd: TK_IDENTIFIER '[' expr ']' • '=' expr ';'

    '='  shift, and go to state 119


State 112

   64 control_flow: KW_IF parenthesis_expr cmd KW_ELSE cmd •

    $default  reduce using rule 64 (control_flow)


State 113

   59 expr: KW_INPUT '(' type ')' •

    $default  reduce using rule 59 (expr)


State 114

   61 expr: TK_IDENTIFIER '(' func_args_list ')' •

    $default  reduce using rule 61 (expr)


State 115

   39 func_args_tail: ',' • expr func_args_tail

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 120
    parenthesis_expr  go to state 58


State 116

   37 func_args_list: expr func_args_tail •

    $default  reduce using rule 37 (func_args_list)


State 117

   45 expr: TK_IDENTIFIER '[' expr ']' •

    $default  reduce using rule 45 (expr)


State 118

   35 output_tail: ',' output_arg output_tail •

    $default  reduce using rule 35 (output_tail)


State 119

   25 cmd: TK_IDENTIFIER '[' expr ']' '=' • expr ';'

    KW_INPUT       shift, and go to state 48
    TK_IDENTIFIER  shift, and go to state 49
    LIT_INT        shift, and go to state 50
    LIT_REAL       shift, and go to state 51
    LIT_CHAR       shift, and go to state 52
    '~'            shift, and go to state 54
    '('            shift, and go to state 46

    expr              go to state 121
    parenthesis_expr  go to state 58


State 120

   39 func_args_tail: ',' expr • func_args_tail
   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    ','           shift, and go to state 115

    $default  reduce using rule 40 (func_args_tail)

    func_args_tail  go to state 122


State 121

   25 cmd: TK_IDENTIFIER '[' expr ']' '=' expr • ';'
   46 expr: expr • '+' expr
   47     | expr • '-' expr
   48     | expr • '*' expr
   49     | expr • '/' expr
   50     | expr • '&' expr
   51     | expr • '|' expr
   53     | expr • OPERATOR_DIF expr
   54     | expr • OPERATOR_EQ expr
   55     | expr • OPERATOR_GE expr
   56     | expr • OPERATOR_LE expr
   57     | expr • '<' expr
   58     | expr • '>' expr

    OPERATOR_LE   shift, and go to state 75
    OPERATOR_GE   shift, and go to state 76
    OPERATOR_EQ   shift, and go to state 77
    OPERATOR_DIF  shift, and go to state 78
    '&'           shift, and go to state 79
    '|'           shift, and go to state 80
    '>'           shift, and go to state 81
    '<'           shift, and go to state 82
    '+'           shift, and go to state 83
    '-'           shift, and go to state 84
    '*'           shift, and go to state 85
    '/'           shift, and go to state 86
    ';'           shift, and go to state 123


State 122

   39 func_args_tail: ',' expr func_args_tail •

    $default  reduce using rule 39 (func_args_tail)


State 123

   25 cmd: TK_IDENTIFIER '[' expr ']' '=' expr ';' •

    $default  reduce using rule 25 (cmd)
